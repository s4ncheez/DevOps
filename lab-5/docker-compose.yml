version: '3.7'

networks:
  app-network:

volumes:
  db-data:

services:
  backend:
    build:
      context: spring-backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  frontend:
    build:
      context: react-frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    networks:
      - app-network
    env_file:
      - .env

  db:
    image: mysql
    container_name: db
    restart: always
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}"]
      timeout: 20s
      retries: 10

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
      - frontend